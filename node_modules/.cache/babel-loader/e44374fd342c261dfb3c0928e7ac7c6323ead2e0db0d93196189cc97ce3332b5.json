{"ast":null,"code":"var _jsxFileName = \"/home/mdc/mdc/my_projects/01-starting-setup/src/components/NewExpenses/ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = () => {\n  _s();\n  //Declarando 1 a 1:\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n\n  //Junto com a opção 2 e 3\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: ''\n  // });\n  let msg;\n  const titleChangeHandler = event => {\n    //opção 1\n    setEnteredTitle(event.target.value);\n    console.log(enteredTitle);\n    if (enteredTitle.trim().length < 3) {\n      return msg = \"Invalid message\";\n    } else {\n      return msg = \"Valid message\";\n    }\n    //opção 2\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // });\n\n    //opção 3\n    //Se o seu state update depende do previous state, melhor usar essa forma:\n    // setUserInput((prevState) => {\n    //   return {...prevState, enteredTitle: event.target.value };\n    // });\n\n    //ACIMA três formas de fazer\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  };\n  const click = event => {};\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: titleChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0.01\",\n        step: \"0,01\",\n        onChange: amountChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        min: \"201901-01\",\n        max: \"2022-12-31\",\n        onChange: dateChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: click,\n      children: \"Add Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this);\n};\n_s(ExpenseForm, \"bd+qMT3ruHL0NsDPtDQEeGbzkoY=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","msg","titleChangeHandler","event","target","value","console","log","trim","length","amountChangeHandler","dateChangeHandler","click"],"sources":["/home/mdc/mdc/my_projects/01-starting-setup/src/components/NewExpenses/ExpenseForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ExpenseForm.css';\n\nconst ExpenseForm = () => {\n  //Declarando 1 a 1:\n  const [enteredTitle, setEnteredTitle ] = useState('')\n  const [enteredAmount, setEnteredAmount ] = useState('')\n  const [enteredDate, setEnteredDate ] = useState('')\n  \n  //Junto com a opção 2 e 3\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: ''\n  // });\n  let msg\n  const titleChangeHandler = (event) => {\n    //opção 1\n    setEnteredTitle(event.target.value);\n    console.log(enteredTitle)\n    if (enteredTitle.trim().length < 3) {\n      return msg = \"Invalid message\"\n    } else {\n      return msg = \"Valid message\"\n    }\n    //opção 2\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // });\n\n    //opção 3\n    //Se o seu state update depende do previous state, melhor usar essa forma:\n    // setUserInput((prevState) => {\n    //   return {...prevState, enteredTitle: event.target.value };\n    // });\n\n    //ACIMA três formas de fazer\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    \n    \n  }\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    \n  }\n\n  const click = (event) =>{\n    \n  }\n  return ( \n  <form>\n    <div className='new-expense__control'>\n      <label>Title</label>\n      <input type='text' onChange={titleChangeHandler} />\n      <p>{msg}</p>\n    </div>\n    <div className='new-expense__control'>\n      <label>Amount</label>\n      <input type='number' min='0.01' step='0,01' onChange = {amountChangeHandler}/>\n    </div>\n    <div className='new-expense__control'>\n      <label>Date</label>\n      <input type='date' min='201901-01' max='2022-12-31' onChange = {dateChangeHandler}/>\n    </div>\n    <div className='new-expense__actions'></div>\n    <button type='submit' onClick = {click}>Add Expense</button>\n  </form>\n\n  )\n}\nexport default ExpenseForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAAC;AAE3B,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAE,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACrD,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAE,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACvD,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAE,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEnD;EACA;EACA;EACA;EACA;EACA;EACA,IAAIQ,GAAG;EACP,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;IACpC;IACAP,eAAe,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACnCC,OAAO,CAACC,GAAG,CAACZ,YAAY,CAAC;IACzB,IAAIA,YAAY,CAACa,IAAI,EAAE,CAACC,MAAM,GAAG,CAAC,EAAE;MAClC,OAAOR,GAAG,GAAG,iBAAiB;IAChC,CAAC,MAAM;MACL,OAAOA,GAAG,GAAG,eAAe;IAC9B;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;EACF,CAAC;;EAED,MAAMS,mBAAmB,GAAIP,KAAK,IAAK;IACrCL,gBAAgB,CAACK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAGtC,CAAC;EAED,MAAMM,iBAAiB,GAAIR,KAAK,IAAK;IACnCH,cAAc,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAEpC,CAAC;EAED,MAAMO,KAAK,GAAIT,KAAK,IAAI,CAExB,CAAC;EACD,oBACA;IAAA,wBACE;MAAK,SAAS,EAAC,sBAAsB;MAAA,wBACnC;QAAA,UAAO;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ,eACpB;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAED;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAG,eACnD;QAAA,UAAID;MAAG;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACR,eACN;MAAK,SAAS,EAAC,sBAAsB;MAAA,wBACnC;QAAA,UAAO;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ,eACrB;QAAO,IAAI,EAAC,QAAQ;QAAC,GAAG,EAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAIS;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1E,eACN;MAAK,SAAS,EAAC,sBAAsB;MAAA,wBACnC;QAAA,UAAO;MAAI;QAAA;QAAA;QAAA;MAAA,QAAQ,eACnB;QAAO,IAAI,EAAC,MAAM;QAAC,GAAG,EAAC,WAAW;QAAC,GAAG,EAAC,YAAY;QAAC,QAAQ,EAAIC;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAChF,eACN;MAAK,SAAS,EAAC;IAAsB;MAAA;MAAA;MAAA;IAAA,QAAO,eAC5C;MAAQ,IAAI,EAAC,QAAQ;MAAC,OAAO,EAAIC,KAAM;MAAA,UAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACvD;AAGT,CAAC;AAAA,GAvEKlB,WAAW;AAAA,KAAXA,WAAW;AAwEjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}